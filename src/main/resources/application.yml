server:
  port: 8080
spring:
  cloud:
    function:
      definition: fooEventConsumer;fooEventSupplier
    schemaRegistryClient:
      endpoint: http://localhost:8081
      cached: true
    stream:
      bindings:
        fooEventSupplier-out-0:
          contentType: application/json
          destination: foo-event-topic-new
        fooEventConsumer-in-0:
          contentType: application/json
          destination: foo-event-topic-new
          group: foo
      kafka:
        binder:
          brokers: "localhost:9092"
          producer-properties:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer
            schema.registry.url: http://localhost:8081
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.serializer: io.confluent.kafka.serializers.json.KafkaJsonSchemaDeserializer
            schema.registry.url: http://localhost:8081
logging:
  level:
     org.springframework: INFO
     org.hibernate.type.descriptor.sql.BasicBinder: INFO
     com.example.awsgluekafkaexample: INFO
